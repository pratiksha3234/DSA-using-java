/* Java program to implement stack
operations using array*/
class Stack
{
  static int MAX = 100;
  int top=-1;
  int a[] = new int[MAX];	// Maximum size of Stack


  boolean isEmpty ()
  {
    return (top < 0);
  }


  boolean push (int x)
  {
    if (top >= (MAX - 1))
      {
	System.out.println ("Overflow condition reached");
	return false;
      }
    else
      {
	a[++top] = x;
	System.out.println (x + " pushed into stack");
	return true;
      }
  }


  int pop ()
  {
    if (top < 0)
      {
	System.out.println ("Underflow condition reached");
	return 0;
      }
    else
      {
	int x = a[top--];
	return x;
      }
  }


  int peek ()
  {
    if (top < 0)
      {
	System.out.println ("Underflow condition");
	return 0;
      }
    else
      {
	int x = a[top];
	return x;
      }
  }
  
  void display(){
      if((top < 0))
      System.out.println("stack empty");
      else{
          for(int i=0;i<=top;i++)
          System.out.println(a[i]);
      }
  }
}

class Main
{
  public static void main (String args[])
  {
    Stack stk = new Stack ();
      stk.push (20);
      stk.push (40);
      stk.push (60);
      System.out.println ("element poped out : " + stk.pop ());
      System.out.println("Final stack elements:");
      stk.display();
  }
}
